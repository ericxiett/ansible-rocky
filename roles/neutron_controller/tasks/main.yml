---

- name: Create the neutron database
  mysql_db:
    name: neutron
    state: present

- name: Create neutron user for mysql
  mysql_user:
    name: neutron
    password: '{{ ansible_ssh_pass }}'
    priv: "neutron.*:ALL,GRANT"

- name: Create neutron user in keystone
  os_user:
    cloud: rocky-own
    state: present
    name: neutron
    password: '{{ ansible_ssh_pass }}'
    domain: default
    default_project: service

- name: Add the admin role to the neutron user
  os_user_role:
    cloud: rocky-own
    user: neutron
    role: admin
    project: service

- name: Create the neutron service entity
  os_keystone_service:
    cloud: rocky-own
    state: present
    name: neutron
    service_type: network
    description: OpenStack Networking Service

- name: Create neutron API endpoint
  os_keystone_endpoint:
    cloud: rocky-own
    state: present
    service: neutron
    endpoint_interface: '{{ item }}'
    url: http://controller:9696
    region: RegionOne
  with_items:
    - public
    - admin
    - internal

- name: Install neutron packages
  apt:
    name: '{{ item }}'
    state: latest
  with_items:
    - neutron-server
    - neutron-plugin-ml2
    - neutron-openvswitch-agent
    - neutron-l3-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent

- name: Config neutron.conf
  ini_file:
    path: /etc/neutron/neutron.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: database, option: connection, value: 'mysql+pymysql://neutron:{{ ansible_ssh_pass }}@controller/neutron' }
    - { section: DEFAULT, option: core_plugin, value: ml2 }
    - { section: DEFAULT, option: service_plugins, value: router }
    - { section: DEFAULT, option: allow_overlapping_ips, value: true }
    - { section: DEFAULT, option: transport_url, value: 'rabbit://openstack:{{ ansible_ssh_pass }}@controller' }
    - { section: DEFAULT, option: auth_strategy, value: keystone }
    - { section: keystone_authtoken, option: www_authenticate_uri, value: 'http://controller:5000' }
    - { section: keystone_authtoken, option: auth_url, value: 'http://controller:5000' }
    - { section: keystone_authtoken, option: memcached_servers, value: 'controller:11211' }
    - { section: keystone_authtoken, option: auth_type, value: password }
    - { section: keystone_authtoken, option: project_domain_name, value: Default }
    - { section: keystone_authtoken, option: user_domain_name, value: Default }
    - { section: keystone_authtoken, option: project_name, value: service }
    - { section: keystone_authtoken, option: username, value: neutron }
    - { section: keystone_authtoken, option: password, value: '{{ ansible_ssh_pass }}' }
    - { section: nova, option: auth_url, value: 'http://controller:5000/v3' }
    - { section: nova, option: auth_type, value: password }
    - { section: nova, option: project_domain_name, value: Default }
    - { section: nova, option: user_domain_name, value: Default }
    - { section: nova, option: region_name, value: RegionOne }
    - { section: nova, option: project_name, value: service }
    - { section: nova, option: username, value: nova }
    - { section: nova, option: password, value: '{{ ansible_ssh_pass }}' }
    - { section: DEFAULT, option: notify_nova_on_port_status_changes, value: true }
    - { section: DEFAULT, option: notify_nova_on_port_data_changes, value: true }

- name: Config ml2_conf.ini
  ini_file:
    path: /etc/neutron/plugins/ml2/ml2_conf.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: ml2, option: type_drivers, value: 'flat,vlan,vxlan' }
    - { section: ml2, option: tenant_network_types, value: vxlan }
    - { section: ml2, option: mechanism_drivers, value: 'openvswitch,l2population' }
    - { section: ml2, option: extension_drivers, value: port_security }
    - { section: ml2_type_flat, option: flat_networks, value: provider }
    - { section: ml2_type_vxlan, option: vni_ranges, value: '1:1000' }
    - { section: securitygroup, option: enable_ipset, value: true }

- name: Config openvswitch_agent.ini
  ini_file:
    path: /etc/neutron/plugins/ml2/openvswitch_agent.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: ovs, option: bridge_mappings, value: 'provider:br-provider' }
    - { section: ovs, option: local_ip, value: '{{ ansible_host }}' }
    - { section: agent, option: tunnel_types, value: vxlan }
    - { section: agent, option: l2_population , value: true }
    - { section: securitygroup, option: enable_security_group , value: true }
    - { section: securitygroup, option: firewall_driver = , value: 'iptables_hybrid' }

- name: Add br_netfilter kernel module
  command: modprobe br_netfilter

- name: Ensure your Linux operating system kernel supports network bridge filters
  blockinfile:
    block: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
    path: /etc/sysctl.conf

- name: Execute sysctl
  command: sysctl -p
  
- name: create ovs provider bridge
  command: ovs-vsctl add-br br-provider

- name: Config l3_agent.ini
  ini_file:
    path: /etc/neutron/l3_agent.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: DEFAULT, option: interface_driver, value: linuxbridge }

- name: Config dhcp_agent.ini
  ini_file:
    path: /etc/neutron/dhcp_agent.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: DEFAULT, option: interface_driver, value: linuxbridge }
    - { section: DEFAULT, option: dhcp_driver, value: 'neutron.agent.linux.dhcp.Dnsmasq' }
    - { section: DEFAULT, option: enable_isolated_metadata, value: true }

- name: Config metadata_agent.ini
  ini_file:
    path: /etc/neutron/metadata_agent.ini
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: DEFAULT, option: nova_metadata_host, value: controller }
    - { section: DEFAULT, option: metadata_proxy_shared_secret, value: '{{ ansible_ssh_pass }}' }

- name: Config nova.conf
  ini_file:
    path: /etc/nova/nova.conf
    section: '{{ item.section }}'
    option: '{{ item.option }}'
    value: '{{ item.value }}'
  with_items:
    - { section: neutron, option: url, value: 'http://controller:9696' }
    - { section: neutron, option: region_name, value: RegionOne }
    - { section: neutron, option: project_domain_name, value: Default }
    - { section: neutron, option: user_domain_name, value: Default }
    - { section: neutron, option: project_name, value: service }
    - { section: neutron, option: username, value: neutron }
    - { section: neutron, option: password, value: '{{ ansible_ssh_pass }}' }
    - { section: neutron, option: auth_type, value: password }
    - { section: neutron, option: auth_url, value: 'http://controller:5000' }
    - { section: neutron, option: service_metadata_proxy, value: true }
    - { section: neutron, option: metadata_proxy_shared_secret, value: '{{ ansible_ssh_pass }}' }

- name: Populate neutron database
  command: |
    su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf \
      --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron

- name: Restart nova/neutron service
  service:
    name: '{{ item }}'
    state: restarted
    enabled: yes
  with_items:
    - nova-api
    - neutron-server
    - neutron-linuxbridge-agent
    - neutron-dhcp-agent
    - neutron-metadata-agent
    - neutron-l3-agent
